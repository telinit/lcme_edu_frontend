{-
   LCME EDU API
   ...

   The version of the OpenAPI document: v1
   Contact: sysadmin@lnmo.ru

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.File exposing
    ( fileDelete
    , fileList
    , fileMkdir
    , filePartialUpdate
    , fileQuota
    , fileRead
    , fileUpdate
    , fileUpload
    )

import Api
import Api.Data exposing (..)
import Dict
import File exposing (File)
import Http
import Json.Decode
import Json.Encode
import Uuid exposing (Uuid)


fileDelete : String -> Api.Request ()
fileDelete id_path =
    Api.request
        "DELETE"
        "/file/{id}/"
        [ ( "id", identity id_path ) ]
        []
        []
        Nothing
        (Json.Decode.succeed ())


fileList : Api.Request (List Api.Data.File)
fileList =
    Api.request
        "GET"
        "/file/"
        []
        []
        []
        Nothing
        (Json.Decode.list Api.Data.fileDecoder)


fileMkdir : Api.Data.MakeDir -> Api.Request Api.Data.File
fileMkdir data_body =
    Api.request
        "POST"
        "/file/mkdir/"
        []
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeMakeDir data_body)))
        Api.Data.fileDecoder


filePartialUpdate : String -> Api.Data.File -> Api.Request Api.Data.File
filePartialUpdate id_path data_body =
    Api.request
        "PATCH"
        "/file/{id}/"
        [ ( "id", identity id_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeFile data_body)))
        Api.Data.fileDecoder


fileQuota : Api.Request Api.Data.FileQuota
fileQuota =
    Api.request
        "GET"
        "/file/quota/"
        []
        []
        []
        Nothing
        Api.Data.fileQuotaDecoder


fileRead : String -> Api.Request Api.Data.File
fileRead id_path =
    Api.request
        "GET"
        "/file/{id}/"
        [ ( "id", identity id_path ) ]
        []
        []
        Nothing
        Api.Data.fileDecoder


fileUpdate : String -> Api.Data.File -> Api.Request Api.Data.File
fileUpdate id_path data_body =
    Api.request
        "PUT"
        "/file/{id}/"
        [ ( "id", identity id_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeFile data_body)))
        Api.Data.fileDecoder


fileUpload : File.File -> Maybe Uuid -> Api.Request Api.Data.File
fileUpload file parentFileId =
    Api.request
        "POST"
        "/file/upload/"
        []
        []
        []
        (Just <| Http.multipartBody <| List.filterMap identity [ Just <| Http.filePart "file" file, Maybe.map (Http.stringPart "parentFileId" << Uuid.toString) parentFileId ])
        Api.Data.fileDecoder
